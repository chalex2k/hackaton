# Generated by Django 3.2.5 on 2023-04-27 17:28

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('api', '0003_auto_20230427_1504'),
    ]

    operations = [
        migrations.CreateModel(
            name='CityModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ContestModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('datetime_start', models.DateTimeField()),
                ('datetime_end', models.DateTimeField()),
                ('format', models.TextField(choices=[(0, 'task_based'), (1, '???')], default=0)),
                ('feeding', models.BooleanField()),
                ('difficulty', models.IntegerField()),
                ('type', models.IntegerField(choices=[(0, 'individual'), (1, 'command')], default=0)),
                ('active', models.BooleanField(default=False)),
                ('employer', models.TextField(default='')),
                ('image_path', models.ImageField(upload_to='img')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.citymodel')),
            ],
            options={
                'ordering': ['-datetime_start'],
            },
        ),
        migrations.CreateModel(
            name='ContestParticipantThroughModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('positive_feedback', models.TextField()),
                ('negative_feedback', models.TextField()),
                ('common_feedback', models.TextField()),
                ('mark_feedback', models.IntegerField()),
                ('mark_difficulty', models.IntegerField()),
                ('mark_interest', models.IntegerField()),
                ('mark_organization', models.IntegerField()),
                ('mark_quality', models.IntegerField()),
                ('contest_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.contestmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ContestPartnersModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contest_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.contestmodel')),
            ],
        ),
        migrations.CreateModel(
            name='Favorites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=255)),
                ('on_create', models.DateField(auto_now_add=True)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='api.contestmodel')),
            ],
        ),
        migrations.CreateModel(
            name='TeamModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.user')),
                ('name', models.CharField(max_length=255)),
                ('rating', models.IntegerField()),
                ('type', models.IntegerField(choices=[(0, 'sportsman'), (1, 'partner'), (2, 'regional'), (3, 'admin')], default=0)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.citymodel')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.DeleteModel(
            name='City',
        ),
        migrations.RemoveField(
            model_name='contestparticipant',
            name='contest_id',
        ),
        migrations.RemoveField(
            model_name='contestparticipant',
            name='participant_id',
        ),
        migrations.DeleteModel(
            name='Contest',
        ),
        migrations.DeleteModel(
            name='ContestParticipant',
        ),
        migrations.AddField(
            model_name='contestpartnersmodel',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.usermodel'),
        ),
        migrations.AddField(
            model_name='contestparticipantthroughmodel',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.usermodel'),
        ),
        migrations.AddField(
            model_name='contestmodel',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='contests', to='api.usermodel'),
        ),
        migrations.AddField(
            model_name='contestmodel',
            name='participants',
            field=models.ManyToManyField(through='api.ContestParticipantThroughModel', to='api.UserModel'),
        ),
        migrations.AddIndex(
            model_name='favorites',
            index=models.Index(fields=['user', 'contest'], name='api_favorit_user_40593c_idx'),
        ),
    ]
